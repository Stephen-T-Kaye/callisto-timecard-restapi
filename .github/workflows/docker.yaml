name: Docker Image CI

on: 
  push:
    branches: []
  pull_request:
    branches:
      - main

jobs:
  build_app:
    name: Build Application
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v4
    - name: Retrieve git history
      run: |
        git fetch origin +refs/heads/main:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github
        cache: maven

    - name: Build with Maven
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: mvn -s ./timecard_settings.xml clean verify

    # - name: Scan with SonarCloud
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #     SONAR_HOST: https://sonarcloud.io
    #   run: mvn sonar:sonar --file pom.xml -Dsonar.host.url=$SONAR_HOST -Dsonar.token=$SONAR_TOKEN -Dsonar.qualitygate.wait=true



  build_images:
    name: Build Docker Images
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - image: "Database"
            needs: []
            dockerfile: db/Dockerfile
          - site: "Application"
            needs: 
              - build_app
            dockerfile: Dockerfile

    steps:
    - uses: actions/checkout@v4
    - name: Lint ${{ matrix.image }} Docker
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: ${{ matrix.dockerfile }}
